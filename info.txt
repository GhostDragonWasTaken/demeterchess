          ************************************************

          *   tkChessUI Version 1.22.0 Stable Release    *
          *     Python Compiled Variant [Official]       *

          ************************************************

	               Owned by Marquis Eco

	Any modification of my client is encouraged as it
	 is open source, and you are welcome to contact
	    me through Discord in order to get access
	         to the source code: marquiseco



Current Features:
- Study Mode
- Engine Configuration [Alpha]
- Multi-Engine Support*
- Move History
- MultiPV (Engine Lines)*

* - Engine requires support for UCI
  - Confirmed support for: Stockfish, Komodo and Houdini

* - Only functional with Komodo as of version 1.22.0


Planned additions for the following update, 1.22.5(^) and 1.23.0(*):
^ Product-Key Caching
^ Turn off engine recommendations
* Update of the Bot Mode
* PGN game saving and loading
* FEN input for board update
* Deleting accidental moves


How to use:

* As of 1.22.0

Decompress the folder and open the 'dist' folder.
There will be a 'chessapp' folder and repeat the process.
You will be greeted with all the project files, and you will want to open 'chessapp'.

Upon opening, you will be greeted by a menu with only one option, to start the game.*
You will be asked for a product key, which is only obtainable through me.

Once unlocking the game, you will be greeted with a plethera of options and a board, where you can make moves.
When you left click on a piece, you will be shown the legal moves of it. You must click on another square to move it.

The engine will recommend moves to you through the "Engine Lines" menu and on the board.

There will be a drop-down menu of all the engines available, which can be modified by adding your own engines to the same directory of the app.
You will need to recompile the app, which only I can do, but I will gladly assist you!
The only engine available is Komodo, which has the most configurable set-up. You will need to extensively modify the code to add support for other engines.
There is also a "Restart Game" button which will, reset the board. (During mid-analysis, it will create an error, not fatal however. Only the MultiPV (Engine lines) freaking out.)

All available configuration options:
* Untested, or seamless effect
** Not recommended
*** Not yet implemented

Skill (* and **)
0 - 25
Adjusts the Elo score of the engine, roughly by 125 by every point. 25 puts the engine on maximum power, and will search for the best moves.
Not yet recommended to fiddle with until further notice

Threads
1 to unlimited(**) (Higher values not useful at lower search depths, i.e. 9, 8, 7, etc.)
Splits the processing of the engine into different threads, which will increase the efficiency of the engine and speed up the evaluation.

Hash Size:
16 (Recommended) to Maximum RAM(* and **)
Sets the size of the engine's move caching for it to be able to explore more moves. More effective with MCTS***


Technical Information:

The Application was compiled to make it less of a hassle for illiterate Python users.
There is an official branch that has been compiled in C++, that is the fastest version available.
